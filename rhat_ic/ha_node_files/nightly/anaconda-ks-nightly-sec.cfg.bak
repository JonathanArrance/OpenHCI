# Kickstart file automatically generated by anaconda.
install
cdrom
lang en_US.UTF-8
keyboard us

#Mgmtnet
network  --activate --onboot yes --device eth2 --bootproto static --noipv6
network  --activate --onboot yes --device eth3 --bootproto static --noipv6
#network  --activate --onboot yes --device bond0 --bootproto dhcp --bondopts=mode=active-backup,miimon=100,primary=eth2 --noipv6 --bondslaves eth2,eth3
network --activate --onboot yes --device bond0 --bootproto static --ip=192.168.10.64 --netmask=255.255.255.0 --gateway=192.168.10.1 --nameserver=8.8.8.8 --bondopts=mode=active-backup,miimon=100,primary=eth2 --noipv6 --bondslaves eth2,eth3

#Datanet
network --activate --onboot yes --device eth4 --bootproto static --noipv6
network --activate --onboot yes --device eth5 --bootproto static --noipv6
network --activate --onboot yes --device bond1 --bootproto dhcp --bondopts=mode=balance-alb,miimon=100,primary=eth4 --noipv6 --bondslaves eth4,eth5

#Uplink
network --activate --onboot yes --device eth6 --bootproto static --noipv6
network --activate --onboot yes --device eth7 --bootproto static --noipv6

#HA
network --activate --onboot yes --device eth0 --bootproto static --noipv6
network --activate --onboot yes --device eth1 --bootproto static --noipv6
network --activate --onboot yes --device bond3 --bootproto dhcp --bondopts=mode=active-backup,miimon=100,primary=eth0 --noipv6 --bondslaves eth0,eth1


rootpw  --iscrypted $6$2Hd0d.j2Pud2GDqW$JMBdYd3Jxt51LsiBOW6ZGuTZpk.I.dZyy20jlCenybz5a748/ZUzHuixaO3rfqsq1ZS4ASS/hbKqDBGVJKcGF0
firewall --disabled
authconfig --enableshadow --passalgo=sha512
#selinux --disabled
selinux --disabled
timezone --utc America/New_York
group --name transystem
user --name=transuser --groups=transystem --homedir=/home/transuser --password $6$2Hd0d.j2Pud2GDqW$JMBdYd3Jxt51LsiBOW6ZGuTZpk.I.dZyy20jlCenybz5a748/ZUzHuixaO3rfqsq1ZS4ASS/hbKqDBGVJKcGF0 --iscrypted

bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
#clear the mbr
zerombr
#clear out all partitions
clearpart --all --initlabel
url --url=http://192.168.10.10/image/cent-65-x86-64

#only use the first "disk"
ignoredisk --only-use=sda
part /boot --fstype ext3 --size=150
part swap --size=1024
part pv.01 --size=1 --grow
volgroup vg_root pv.01
logvol  /  --vgname=vg_root  --size=7192  --name=lv_root

repo --name="CentOS"  --baseurl=http://192.168.10.10/image/cent-65-x86-64 --cost=100

reboot

%packages
@additional-devel
@core
@hardware-monitoring
@ha
@ha-management
@load-balancer
@resilient-storage
@scalable-file-systems
@server-platform-devel
@server-policy
@workstation-policy
@postgresql-client
@postgresql
libgcrypt-devel
libXinerama-devel
libuuid-devel
xorg-x11-proto-devel
startup-notification-devel
libgnomeui-devel
libbonobo-devel
libXau-devel
libXrandr-devel
popt-devel
libxslt-devel
libglade2-devel
gnutls-devel
lm_sensors
pacemaker
pacemaker-libs-devel
cluster-glue-libs-devel
clusterlib-devel
corosynclib-devel
resource-agents
haproxy
keepalived
resource-agents
cmirror
%end


%post
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(
rpm -Uvh http://192.168.10.10/rhat_ic/common/rdo-release-icehouse-4.noarch.rpm
rpm -Uvh http://192.168.10.10/rhat_ic/common/epel-release-6-8.noarch.rpm
rpm -Uvh http://192.168.10.10/rhat_ic/ha_node_files/elrepo-release-6-6.el6.elrepo.noarch.rpm

#only needed for crmsh
wget -P /etc/yum.repos.d/ http://192.168.10.10/rhat_ic/ha_node_files/network:ha-clustering:Stable.repo

ping -c 4 yahoo.com

yum install -y avahi-autoipd
yum install -y drbd84-utils kmod-drbd84
yum install -y xfsprogs
yum install -y crmsh
yum install -y pcs

#avoid dup repo issue
mv /etc/yum.repos.d/network:ha-clustering:Stable.repo ..

#############Data net bond###################
#Set up bond1
sed -i 's/BOOTPROTO=\"dhcp\"/BOOTPROTO=\"static\"/' /etc/sysconfig/network-scripts/ifcfg-bond1
sed -i 's/NM_CONTROLLED=\"yes\"/NM_CONTROLLED=\"no\"/' /etc/sysconfig/network-scripts/ifcfg-bond1
sed -i 's/TYPE=\"Ethernet\"/TYPE=\"Bond\"/' /etc/sysconfig/network-scripts/ifcfg-bond1
echo 'IPADDR=' >> /etc/sysconfig/network-scripts/ifcfg-bond1
echo 'NETMASK=' >> /etc/sysconfig/network-scripts/ifcfg-bond1
echo 'BONDING_OPTS="mode=balance-alb miimon=100 primary=eth4"' >> /etc/sysconfig/network-scripts/ifcfg-bond1
sed -i 's/HWADDR=/#HWADDR=/' /etc/sysconfig/network-scripts/ifcfg-bond1

#set auto assign IP on bond3
avahi-autoipd --force-bind -D bond1
sleep 10
IP=`ip addr | grep inet | grep bond1 | awk -F" " '{print $2}' | sed -e 's/\/.*$//'`
sed -i 's/IPADDR=/IPADDR='${IP}'/g' /etc/sysconfig/network-scripts/ifcfg-bond1
sed -i 's/NETMASK=/NETMASK="255.255.0.0"/g' /etc/sysconfig/network-scripts/ifcfg-bond1
############################################

##############Cluster bond##################
#Set up bond3
sed -i 's/BOOTPROTO=\"dhcp\"/BOOTPROTO=\"static\"/' /etc/sysconfig/network-scripts/ifcfg-bond3
sed -i 's/NM_CONTROLLED=\"yes\"/NM_CONTROLLED=\"no\"/' /etc/sysconfig/network-scripts/ifcfg-bond3
sed -i 's/TYPE=\"Ethernet\"/TYPE=\"Bond\"/' /etc/sysconfig/network-scripts/ifcfg-bond3
echo 'IPADDR=' >> /etc/sysconfig/network-scripts/ifcfg-bond3
echo 'NETMASK=' >> /etc/sysconfig/network-scripts/ifcfg-bond3
echo 'BONDING_OPTS="mode=active-backup miimon=100 primary=eth0"' >> /etc/sysconfig/network-scripts/ifcfg-bond3
sed -i 's/HWADDR=/#HWADDR=/' /etc/sysconfig/network-scripts/ifcfg-bond3

#set auto assign IP on bond3
avahi-autoipd --force-bind -D bond3
sleep 10
IP=`ip addr | grep inet | grep bond3 | awk -F" " '{print $2}' | sed -e 's/\/.*$//'`
sed -i 's/IPADDR=/IPADDR='${IP}'/g' /etc/sysconfig/network-scripts/ifcfg-bond3
sed -i 's/NETMASK=/NETMASK="255.255.0.0"/g' /etc/sysconfig/network-scripts/ifcfg-bond3
############################################

#activate DRBD
/sbin/modprobe drbd
#turn on drbd
chkconfig drbd on

#set the hostname to ciac-xxxxx random digits
echo "Setting the hostname."
mv /etc/hostname /etc/hostname.old

NODEONE=$(($RANDOM % 99999999 + 10000000))
NODETWO=$(($RANDOM % 99999 + 10000))

HOSTNAME=ha-${NODETWO}

#ciac node id
NODEID=010-${NODEONE}-${NODETWO}

echo $NODEID > /etc/nodeid

#add the hostname
mv /etc/sysconfig/network /etc/sysconfig/network.old
echo 'HOSTNAME='$HOSTNAME > /etc/sysconfig/network
echo 'NETWORKING=yes' >> /etc/sysconfig/network

#change the hosts file
mv /etc/hosts /etc/hosts.old

echo '127.0.0.1   localhost' > /etc/hosts
echo "127.0.1.1   $HOSTNAME" >> /etc/hosts
echo "$IP         $HOSTNAME" >> /etc/hosts

echo '::1     ip6-localhost ip6-loopback' >> /etc/hosts
echo 'fe00::0 ip6-localnet' >> /etc/hosts
echo 'ff00::0 ip6-mcastprefix' >> /etc/hosts
echo 'ff02::1 ip6-allnodes' >> /etc/hosts
echo 'ff02::2 ip6-allrouters' >> /etc/hosts

chmod 666 /etc/hosts

sed -i 's/PATH=\$PATH:\$HOME\/bin/PATH=\$PATH:\$HOME\/bin:\/usr\/local\/bin/g' /root/.bash_profile
sed -i 's/secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin/secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin:\/usr\/local\/bin/g' /etc/sudoers
sed -i 's/IPTABLES_SAVE_ON_STOP="no"/IPTABLES_SAVE_ON_STOP="yes"/g' /etc/sysconfig/iptables-config
sed -i 's/IPTABLES_SAVE_ON_RESTART="no"/IPTABLES_SAVE_ON_RESTART="yes"/g' /etc/sysconfig/iptables-config

#fix so sudo can use python2.7 
#echo 'DEFAULTS    secure_path += /usr/local/bin' >> /etc/sudoers

sleep 1

hostname $HOSTNAME

#Set up bond0
sed -i 's/HWADDR/#HWADDR/' /etc/sysconfig/network-scripts/ifcfg-bond0
sed -i 's/IPADDR=\"192.168.10.64\"/IPADDR=\"192.168.0.3\"/' /etc/sysconfig/network-scripts/ifcfg-bond0
sed -i 's/GATEWAY=\"192.168.10.1\"//' /etc/sysconfig/network-scripts/ifcfg-bond0
sed -i 's/DNS1=\"8.8.8.8\"//' /etc/sysconfig/network-scripts/ifcfg-bond0

#add uplink to the bridge
echo 'BRIDGE="br-ex"' >> /etc/sysconfig/network-scripts/ifcfg-eth6
echo 'PROMISC="yes"' >> /etc/sysconfig/network-scripts/ifcfg-eth6
sed -i 's/NM_CONTROLLED=\"yes\"/NM_CONTROLLED=\"no\"/' /etc/sysconfig/network-scripts/ifcfg-eth6
sed -i 's/ONBOOT=\"no\"/ONBOOT=\"yes\"/' /etc/sysconfig/network-scripts/ifcfg-eth6
sed -i 's/BOOTPROTO=\"static\"/BOOTPROTO=\"none\"/' /etc/sysconfig/network-scripts/ifcfg-eth6

echo 'PROMISC="yes"' >> /etc/sysconfig/network-scripts/ifcfg-eth7
sed -i 's/NM_CONTROLLED=\"yes\"/NM_CONTROLLED=\"no\"/' /etc/sysconfig/network-scripts/ifcfg-eth7
sed -i 's/ONBOOT=\"no\"/ONBOOT=\"yes\"/' /etc/sysconfig/network-scripts/ifcfg-eth7
sed -i 's/BOOTPROTO=\"static\"/BOOTPROTO=\"none\"/' /etc/sysconfig/network-scripts/ifcfg-eth7

chown -R transuser:transystem /home/transuser
chmod 760 /home/transuser

#get br-ex
wget -P /etc/sysconfig/network-scripts http://192.168.10.10/rhat_ic/network/ifcfg-br-ex

#create the vg devices
lvcreate --name haresources --size 9G vg_root
lvcreate --name rabbit --size 1G vg_root

#set up DRBD and move /var and /usr/local
wget -P /etc/drbd.d http://192.168.10.10/rhat_ic/ha_node_files/haresources.res
wget -P /etc/drbd.d http://192.168.10.10/rhat_ic/ha_node_files/rabbit.res

mv /etc/drbd.d/global_common.conf /etc/drbd.d/global_common.orig
wget -P /etc/drbd.d http://192.168.10.10/rhat_ic/ha_node_files/global_common.conf

sed -i s/\%HAIP1\%/$IP/ /etc/drbd.d/haresources.res
sed -i s/\%HANODE1\%/$HOSTNAME/ /etc/drbd.d/haresources.res

sed -i s/\%HAIP1\%/$IP/ /etc/drbd.d/rabbit.res
sed -i s/\%HANODE1\%/$HOSTNAME/ /etc/drbd.d/rabbit.res

#set ntpdate in cron
echo "5 * * * * root ntpdate your.ntp.server" >> /etc/crontab


#create the drbd devices
echo -e 'yes\n' | drbdadm create-md haresources
echo -e 'yes\n' | drbdadm create-md rabbit

modprobe drbd
drbdadm up haresources
drbdadm up rabbit

#make primary temporarily
drbdadm -- --overwrite-data-of-peer primary haresources
drbdadm -- --overwrite-data-of-peer primary rabbit

#format the the new drbd devices
mkfs.xfs /dev/drbd0
mkfs.xfs /dev/drbd1

#mkdir the mounts
mkdir -p /transcirrus/haresources
mkdir -p /transcirrus/rabbit

wget -P /root http://192.168.10.10/rhat_ic/ha_node_files/nightly/ciac-setup-sec.sh
) 2>&1 | /usr/bin/tee /var/log/post_install.log
chvt 1
%end