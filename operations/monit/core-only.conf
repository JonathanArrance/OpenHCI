#
# Config file for monitoring things that should only be monitored on a core node.
#

#
# general processes, webserver, etc
#

# Check the httpd process and verify with pings and connecting to it via http. Also request
# a file "/static/images/layerx.png" which is a small file.
check process httpd with pidfile /var/run/httpd/httpd.pid
  start program = "/etc/init.d/httpd start" with timeout 60 seconds
  stop program  = "/etc/init.d/httpd stop"
  if failed port 80 protocol http and request "/static/images/layerx.png" then restart
  if 3 restarts within 5 cycles then timeout

check host core-node with address localhost
  if failed icmp type echo count 4 with timeout 3 seconds then alert

check process dnsmasq with pidfile /var/run/dnsmasq.pid
  start program = "/etc/init.d/dnsmasq start" with timeout 60 seconds
  stop program  = "/etc/init.d/dnsmasq stop"
  if 3 restarts within 5 cycles then timeout

# Check the postgresql process and verify that we can connect to the port.
check process postgresql with pidfile /var/run/postmaster.5432.pid
  start program = "/etc/init.d/postgresql start" with timeout 60 seconds
  stop program  = "/etc/init.d/postgresql stop"
  if failed port 5432 protocol pgsql then restart
  if 3 restarts within 5 cycles then timeout

check process dhcpd with pidfile /var/run/dhcpd.pid
  start program = "/etc/init.d/dhcpd start" with timeout 60 seconds
  stop program  = "/etc/init.d/dhcpd stop"
  if 3 restarts within 5 cycles then timeout

check process zero_connect with pidfile /var/run/zero_connect_server.pid
  start program = "/etc/init.d/zero_connect start" with timeout 60 seconds
  stop program  = "/etc/init.d/zero_connect stop"
  if 3 restarts within 5 cycles then timeout

#
# openstack processes
#

check process libvirtd with pidfile /var/run/libvirtd.pid
  start program = "/etc/init.d/libvirtd start" with timeout 60 seconds
  stop program  = "/etc/init.d/libvirtd stop"
  if 3 restarts within 5 cycles then timeout

# Check to make sure the Open vSwitch processes are loaded. There are no pid files so we will
# rely on the exit status from the init script.
check program openvswitch with path "/etc/init.d/openvswitch status"
  start program = "/etc/init.d/openvswitch restart"
  stop program  = "/etc/init.d/openvswitch stop"
  if status != 0 then restart
  if 3 restarts within 5 cycles then timeout

# cinder processes

check process openstack-cinder-api with pidfile /var/run/cinder/cinder-api.pid
  start program = "/etc/init.d/openstack-cinder-api start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-cinder-api stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-cinder-scheduler with pidfile /var/run/cinder/cinder-scheduler.pid
  start program = "/etc/init.d/openstack-cinder-scheduler start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-cinder-scheduler stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-cinder-volume with pidfile /var/run/cinder/cinder-volume.pid
  start program = "/etc/init.d/openstack-cinder-volume start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-cinder-volume stop"
  if 3 restarts within 5 cycles then timeout

# glance processes

check process openstack-glance-api with pidfile /var/run/glance/glance-api.pid
  start program = "/etc/init.d/openstack-glance-api start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-glance-api stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-glance-registry with pidfile /var/run/glance/glance-registry.pid
  start program = "/etc/init.d/openstack-glance-registry start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-glance-registry stop"
  if 3 restarts within 5 cycles then timeout

# keystone process

check process openstack-keystone with pidfile /var/run/keystone/keystone.pid
  start program = "/etc/init.d/openstack-keystone start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-keystone stop"
  if 3 restarts within 5 cycles then timeout

# nova processes

check process openstack-nova-api with pidfile /var/run/nova/nova-api.pid
  start program = "/etc/init.d/openstack-nova-api start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-api stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-cert with pidfile /var/run/nova/nova-cert.pid
  start program = "/etc/init.d/openstack-nova-cert start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-cert stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-compute with pidfile /var/run/nova/nova-compute.pid
  start program = "/etc/init.d/openstack-nova-compute start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-compute stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-conductor with pidfile /var/run/nova/nova-conductor.pid
  start program = "/etc/init.d/openstack-nova-conductor start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-conductor stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-console with pidfile /var/run/nova/nova-console.pid
  start program = "/etc/init.d/openstack-nova-console start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-console stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-consoleauth with pidfile /var/run/nova/nova-consoleauth.pid
  start program = "/etc/init.d/openstack-nova-consoleauth start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-consoleauth stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-metadata-api with pidfile /var/run/nova/nova-metadata-api.pid
  start program = "/etc/init.d/openstack-nova-metadata-api start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-metadata-api stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-novncproxy with pidfile /var/run/nova/nova-novncproxy.pid
  start program = "/etc/init.d/openstack-nova-novncproxy start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-novncproxy stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-scheduler with pidfile /var/run/nova/nova-scheduler.pid
  start program = "/etc/init.d/openstack-nova-scheduler start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-scheduler stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-nova-xvpvncproxy with pidfile /var/run/nova/nova-xvpvncproxy.pid
  start program = "/etc/init.d/openstack-nova-xvpvncproxy start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-nova-xvpvncproxy stop"
  if 3 restarts within 5 cycles then timeout

# swift processes

check process openstack-swift-account with pidfile /var/run/swift/account-server.pid
  start program = "/etc/init.d/openstack-swift-account start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-swift-account stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-swift-container with pidfile /var/run/swift/container-server.pid
  start program = "/etc/init.d/openstack-swift-container start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-swift-container stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-swift-object with pidfile /var/run/swift/object-server.pid
  start program = "/etc/init.d/openstack-swift-object start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-swift-object stop"
  if 3 restarts within 5 cycles then timeout

check process openstack-swift-proxy with pidfile /var/run/swift/proxy-server.pid
  start program = "/etc/init.d/openstack-swift-proxy start" with timeout 60 seconds
  stop program  = "/etc/init.d/openstack-swift-proxy stop"
  if 3 restarts within 5 cycles then timeout

#
# quantum processes
#

check process quantum-dhcp-agent with pidfile /var/run/quantum/quantum-dhcp-agent.pid
  start program = "/etc/init.d/quantum-dhcp-agent start" with timeout 60 seconds
  stop program  = "/etc/init.d/quantum-dhcp-agent stop"
  if 3 restarts within 5 cycles then timeout

check process quantum-l3-agent with pidfile /var/run/quantum/quantum-l3-agent.pid
  start program = "/etc/init.d/quantum-l3-agent start" with timeout 60 seconds
  stop program  = "/etc/init.d/quantum-l3-agent stop"
  if 3 restarts within 5 cycles then timeout

check process quantum-metadata-agent with pidfile /var/run/quantum/quantum-metadata-agent.pid
  start program = "/etc/init.d/quantum-metadata-agent start" with timeout 60 seconds
  stop program  = "/etc/init.d/quantum-metadata-agent stop"
  if 3 restarts within 5 cycles then timeout

check process quantum-openvswitch-agent with pidfile /var/run/quantum/quantum-openvswitch-agent.pid
  start program = "/etc/init.d/quantum-openvswitch-agent start" with timeout 60 seconds
  stop program  = "/etc/init.d/quantum-openvswitch-agent stop"
  if 3 restarts within 5 cycles then timeout

check process quantum-server with pidfile /var/run/quantum/quantum.pid
  start program = "/etc/init.d/quantum-server start" with timeout 60 seconds
  stop program  = "/etc/init.d/quantum-server stop"
  if 3 restarts within 5 cycles then timeout

# The following quantum processes do not seem to run all the time so we won't monitor them.

#check process quantum-lbaas-agent with pidfile /var/run/quantum/quantum-lbaas-agent.pid
#  start program = "/etc/init.d/quantum-lbaas-agent start" with timeout 60 seconds
#  stop program  = "/etc/init.d/quantum-lbaas-agent stop"
#  if 3 restarts within 5 cycles then timeout

#check process quantum-ovs-cleanup with pidfile /var/run/quantum/quantum-ovs-cleanup.pid
#  start program = "/etc/init.d/quantum-ovs-cleanup start" with timeout 60 seconds
#  stop program  = "/etc/init.d/quantum-ovs-cleanup stop"
#  if 3 restarts within 5 cycles then timeout

# The following openstack processes do not seem to run all the time so we won't monitor them.

#check process openstack-glance-scrubber with pidfile /var/run/glance/glance-scrubber.pid
#  start program = "/etc/init.d/openstack-glance-scrubber start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-glance-scrubber stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-account-auditor with pidfile /var/run/swift/account-auditor-server.pid
#  start program = "/etc/init.d/openstack-swift-account-auditor start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-account-auditor stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-account-reaper with pidfile /var/run/swift/account-reaper-server.pid
#  start program = "/etc/init.d/openstack-swift-account-reaper start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-account-reaper stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-account-replicator with pidfile /var/run/swift/account-replicator-server.pid
#  start program = "/etc/init.d/openstack-swift-account-replicator start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-account-replicator stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-container-auditor with pidfile /var/run/swift/container-auditor-server.pid
#  start program = "/etc/init.d/openstack-swift-container-auditor start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-container-auditor stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-container-replicator with pidfile /var/run/swift/container-replicator-server.pid
#  start program = "/etc/init.d/openstack-swift-container-replicator start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-container-replicator stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-container-updater with pidfile /var/run/swift/container-updater-server.pid
#  start program = "/etc/init.d/openstack-swift-container-updater start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-container-updater stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-object-auditor with pidfile /var/run/swift/object-auditor-server.pid
#  start program = "/etc/init.d/openstack-swift-object-auditor start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-object-auditor stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-object-expirer with pidfile /var/run/swift/object-expirer-server.pid
#  start program = "/etc/init.d/openstack-swift-object-expirer start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-object-expirer stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-object-replicator with pidfile /var/run/swift/object-replicator-server.pid
#  start program = "/etc/init.d/openstack-swift-object-replicator start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-object-replicator stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-swift-object-updater with pidfile /var/run/swift/object-updater-server.pid
#  start program = "/etc/init.d/openstack-swift-object-updater start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-swift-object-updater stop"
#  if 3 restarts within 5 cycles then timeout

#check process openstack-nova-spicehtml5proxy with pidfile /var/run/nova/nova-spicehtml5proxy.pid
#  start program = "/etc/init.d/openstack-nova-spicehtml5proxy start" with timeout 60 seconds
#  stop program  = "/etc/init.d/openstack-nova-spicehtml5proxy stop"
#  if 3 restarts within 5 cycles then timeout
